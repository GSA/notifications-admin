name: Run checks

on: [push]

permissions:
  contents: read

env:
  NOTIFY_ENVIRONMENT: test
  FLASK_APP: application.py
  WERKZEUG_DEBUG_PIN: off
  REDIS_ENABLED: 0
  NODE_VERSION: 22.3.0
  AWS_US_TOLL_FREE_NUMBER: "+18556438890"
  ADMIN_BASE_URL: http://localhost:6012

jobs:
  build:
    permissions:
      checks: write
      pull-requests: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.3.0"
      - name: Clear npm cache
        run: npm cache clean --force
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install
      - name: List installed packages
        run: npm ls
      - name: Print node_modules contents
        run: ls -la node_modules
      - name: Check for @rollup/stream module
        run: ls -la node_modules/@rollup
      - uses: ./.github/actions/setup-project
      - uses: jwalton/gh-find-current-pr@v1
        id: findPr
      - uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          test-script: npm test
          output: report-markdown
          annotations: failed-tests
          prnumber: ${{ steps.findPr.outputs.number }}
      - name: Run style checks
        run: poetry run flake8 .
      - name: Check imports alphabetized
        run: poetry run isort --check-only ./app ./tests
      - name: Check dead code
        run: make dead-code
      - name: where is stuff installed
        run: npm ls -g
      - name: Run js lint
        run: npm run lint
      - name: Run js tests
        run: npm test
      - name: Run py tests with coverage
        run: poetry run coverage run --omit=*/notifications_utils/* -m pytest --maxfail=10 --ignore=tests/end_to_end tests/
      - name: Check coverage threshold
        run: poetry run coverage report --fail-under=90

  # Other jobs remain unchanged
